apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: quiz
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      serviceAccountName: mongo-sa # Bind a specific service account for RBAC
      automountServiceAccountToken: false # Disable automatic mounting of service account token
      containers:
      - name: mongo
        image: mongo:4.4.6
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: "500m" # MongoDB CPU request
            memory: "512Mi" # MongoDB memory request
          limits:
            cpu: "1" # MongoDB CPU limit
            memory: "1Gi" # MongoDB memory limit
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
      volumes:
      - name: mongo-volume
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  namespace: quiz
spec:
  capacity: 
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/db # Local host path for development
  # Consider using a storage class for production: AWS EBS or similar provisioner for cloud compatibility
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: quiz
spec: 
  accessModes:  
    - ReadWriteOnce
  storageClassName: "" # Ensures local hostPath storage
  resources:
    requests:
      storage: 1Gi # Enforcing storage request
    limits:
      storage: 1Gi # Enforcing storage limit to avoid excessive usage
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: quiz
spec:
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
  type: ClusterIP
  #type: LoadBalancer # Expose the service externally  
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-sa
  namespace: quiz
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: quiz
  name: mongo-role
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mongo-role-binding
  namespace: quiz
subjects:
- kind: ServiceAccount
  name: mongo-sa
  namespace: quiz
roleRef:
  kind: Role
  name: mongo-role
  apiGroup: rbac.authorization.k8s.io